extend type Board {
  columns: [BoardColumn!]!
}

extend type User {
  columns: [BoardColumn!]!
}

type BoardColumn {
  id: Int!
  title: String!
  boardId: Int!
  order: Int!
}

extend type Mutation {
  column: ColumnMutations! @auth
}

input CreateColumnInput {
  title: String!
  boardId: Int!
  order: Int!
}

type CreateColumnResponse {
  ok: Boolean!
  column: BoardColumn
  error: ErrorMessage
}

input UpdateColumnInput {
  columnId: Int!
  title: String
  order: Int
}

type UpdateColumnResponse {
  ok: Boolean!
  column: BoardColumn
  error: ErrorMessage
}

input DeleteColumnInput {
  columnId: Int!
}

type DeleteColumnResponse {
  ok: Boolean!
  columnId: Int
  error: ErrorMessage
}

type ColumnMutations {
  createColumn(input: CreateColumnInput!): CreateColumnResponse
  updateColumn(input: UpdateColumnInput!): UpdateColumnResponse
  deleteColumn(input: DeleteColumnInput!): DeleteColumnResponse
}
